<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hlc.manager.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.hlc.manager.entity.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="insert_uid" jdbcType="INTEGER" property="insertUid" />
		<result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="is_del" jdbcType="BIT" property="isDel" />
		<result column="is_job" jdbcType="BIT" property="isJob" />
		<result column="mcode" jdbcType="VARCHAR" property="mcode" />
		<result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
		<result column="version" jdbcType="INTEGER" property="version" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, mobile, email, password, insert_uid,
		insert_time,
		update_time, is_del,
		is_job, mcode, send_time, version
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.hlc.manager.entity.User">
		insert into user (id, username, mobile,
		email, password,
		insert_uid,
		insert_time, update_time, is_del,
		is_job, mcode, send_time,
		version
		)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{insertUid,jdbcType=INTEGER},
		#{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{isDel,jdbcType=BIT},
		#{isJob,jdbcType=BIT},
		#{mcode,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP},
		0
		)
	</insert>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
			resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<update id="updateByPrimaryKey" parameterType="com.hlc.manager.entity.User">
		update user
		set
		username = #{username,jdbcType=VARCHAR},
		mobile =
		#{mobile,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		password
		= #{password,jdbcType=VARCHAR},
		insert_uid =
		#{insertUid,jdbcType=INTEGER},
		insert_time =
		#{insertTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		is_del = #{isDel,jdbcType=BIT},
		is_job = #{isJob,jdbcType=BIT},
		mcode = #{mcode,jdbcType=VARCHAR},
		send_time = #{sendTime,jdbcType=TIMESTAMP},
		version =
		#{version,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--=End findUser 根据用户名和密码查找用户 -->
	<!--=End findUserByMobile 根据手机号查找用户 -->
	<!--=Start findUserByName 根据用户名获取用户数据 -->
	<select id="findUserByName" resultType="com.hlc.manager.entity.User">
		select
		id, username,
		mobile, email, password, insert_uid insertUid, insert_time
		insertTime,
		update_time updateTime, is_del isDel,is_job
		isJob,mcode,send_time
		sendTime,version
		from user
		WHERE username=#{username} and is_del=0
	</select>
	<!--=End findUserByName 根据用户名查找用户 -->
	<!--=Start updatePwd 修改用户密码 -->
	<!--=Start updatePwd 修改用户密码 -->
	<!--=Start setUserLockNum 锁定用户 -->
	<!-- <update id="setUserLockNum"> update user set is_lock = #{isLock}, lock_time=NOW() 
		where id = #{id,jdbcType=INTEGER} and is_del=0 AND is_job=0 </update> -->
	<!--=Start setUserLockNum 锁定用户 -->
</mapper>